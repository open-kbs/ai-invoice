(()=>{"use strict";var t={};(()=>{t.d=(e,n)=>{for(var a in n){if(t.o(n,a)&&!t.o(e,a)){Object.defineProperty(e,a,{enumerable:true,get:n[a]})}}}})();(()=>{t.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e)})();(()=>{t.r=t=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(t,"__esModule",{value:true})}})();if(typeof t!=="undefined")t.ab=__dirname+"/";var e={};t.r(e);t.d(e,{handler:()=>handler});const getDefaultChartOfAccounts=()=>({accounts:[{number:"1000",name:"Cash",category:"Assets",subAccounts:[]},{number:"1100",name:"Bank Accounts",category:"Assets",subAccounts:[]},{number:"1200",name:"Accounts Receivable",category:"Assets",subAccounts:[]},{number:"1500",name:"Fixed Assets",category:"Assets",subAccounts:[]},{number:"2100",name:"Accounts Payable",category:"Liabilities",subAccounts:[]},{number:"2300",name:"VAT Payable",category:"Liabilities",subAccounts:[]},{number:"2310",name:"Input VAT",category:"Liabilities",subAccounts:[]},{number:"2320",name:"Output VAT",category:"Liabilities",subAccounts:[]},{number:"2500",name:"Loans",category:"Liabilities",subAccounts:[]},{number:"3000",name:"Capital",category:"Equity",subAccounts:[]},{number:"3100",name:"Retained Earnings",category:"Equity",subAccounts:[]},{number:"4000",name:"Sales",category:"Revenue",subAccounts:[]},{number:"4100",name:"Services",category:"Revenue",subAccounts:[]},{number:"5000",name:"Purchases",category:"Expenses",subAccounts:[]},{number:"5100",name:"Operating Expenses",category:"Expenses",subAccounts:[]},{number:"5200",name:"Personnel Expenses",category:"Expenses",subAccounts:[]},{number:"5900",name:"Other Expenses",category:"Expenses",subAccounts:[]}]});const getOrCreateChartOfAccounts=async()=>{const t=await openkbs.items({action:"fetchItems",field:"itemId",from:"chartOfAccounts",limit:1});const e=t.items?.filter((t=>t.meta?.itemType==="chartOfAccounts"))||[];if(e.length>0){const t=e[0].item.chart;const n=await openkbs.decrypt(t);const a=JSON.parse(n);return a}else{const t=getDefaultChartOfAccounts();await openkbs.items({action:"createItem",itemType:"chartOfAccounts",attributes:[{attrType:"itemId",attrName:"Id",encrypted:false},{attrType:"body",attrName:"chart",encrypted:true}],item:{Id:"chartOfAccounts",chart:await openkbs.encrypt(JSON.stringify(t))}});return t}};const addAccountToChart=(t,e,n)=>{for(let a of t){if(a.number===e){if(!a.subAccounts)a.subAccounts=[];a.subAccounts.push(n);return true}if(a.subAccounts&&a.subAccounts.length>0){if(addAccountToChart(a.subAccounts,e,n)){return true}}}return false};const saveChartOfAccounts=async t=>{const e=await openkbs.encrypt(JSON.stringify(t));const n=await openkbs.items({action:"fetchItems",field:"itemId",from:"chartOfAccounts",limit:1});const a=n.items?.filter((t=>t.meta?.itemType==="chartOfAccounts"))||[];if(a.length>0){await openkbs.items({action:"deleteItem",itemType:"chartOfAccounts",itemId:"chartOfAccounts"})}await openkbs.items({action:"createItem",itemType:"chartOfAccounts",attributes:[{attrType:"itemId",attrName:"Id",encrypted:false},{attrType:"body",attrName:"chart",encrypted:true}],item:{Id:"chartOfAccounts",chart:e}});return true};const saveDocument=async(t,e)=>{if(!t.DocumentId){throw new Error("Document must have a DocumentId field")}const n=await openkbs.items({action:"createItem",itemType:"document",attributes:[{attrType:"itemId",attrName:"Id",encrypted:false},{attrType:"body",attrName:"document",encrypted:true}],item:{Id:t.DocumentId,document:await openkbs.encrypt(JSON.stringify(t))}});return{type:"DOCUMENT_SAVED",data:{message:`Document saved with ID: ${t.DocumentId}`,documentId:t.DocumentId,itemCount:t.DocumentDetails?.length||0,documentData:t,result:n},_meta_actions:[]}};const getActions=t=>[[/\{\s*"type"\s*:\s*"SAVE_DOCUMENT_REQUEST"[\s\S]*\}/,async e=>{const n=openkbs.parseJSONFromText(e[0]);const a=n.document;if(!a){throw new Error("No document data provided")}return await saveDocument(a,t)}],[/\/addAccounts\(([^)]+)\)/,async e=>{const n=JSON.parse(e[1]);const a=Array.isArray(n)?n:[n];const o=await getOrCreateChartOfAccounts();const c=[];const s=[];const r=[];for(const t of a){const{parentNumber:e,number:n,name:a,category:c}=t;if(!n||!a){r.push({account:t,error:"Account number and name are required"});continue}const u={number:n,name:a,category:c||"Expenses",subAccounts:[]};let i=false;if(e){i=addAccountToChart(o.accounts,e,u);if(!i){r.push({account:t,error:`Parent account ${e} not found`})}}else{o.accounts.push(u);i=true}if(i){s.push({number:n,name:a,parentNumber:e||"root"})}}if(s.length>0){await saveChartOfAccounts(o)}return{type:"ACCOUNTS_ADDED",message:`Added ${s.length} account(s) successfully${r.length>0?`, ${r.length} failed`:""}`,added:s,failed:r,...t}}],[/\/getChartOfAccounts\(\)/,async e=>{const n=await getOrCreateChartOfAccounts();return{type:"CHART_OF_ACCOUNTS",data:n,...t}}],[/\/listDocuments\(\)/,async t=>{const e=await openkbs.items({action:"fetchItems",limit:1e3});const n=e.items?.filter((t=>t.meta?.itemType==="document"))||[];if(n.length===0){return{type:"DOCUMENTS_LIST",message:"No documents found",data:[],_meta_actions:[]}}const a=await Promise.all(n.map((async t=>{const e=await openkbs.decrypt(t.item.document);const n=JSON.parse(e);const a=n.DocumentDetails?.map((t=>({name:t.ServiceGood?.Name,quantity:t.Qtty,measure:t.Measure,price:t.ServiceGood?.Price,amount:t.Amount,vatRate:t.ServiceGood?.VatRate,vatAmount:t.VatAmount})))||[];return{id:t.item.Id,documentId:n.DocumentId,documentType:n.DocumentType,number:n.Number,date:n.Date,totalAmount:n.TotalAmount,totalVatAmount:n.TotalVatAmount,sender:n.CompanySender?.Name,senderTaxId:n.CompanySender?.TaxID,recipient:n.CompanyRecipient?.Name,recipientTaxId:n.CompanyRecipient?.TaxID,itemCount:n.DocumentDetails?.length||0,items:a,createdAt:t.meta.createdAt,updatedAt:t.meta.updatedAt}})));return{type:"DOCUMENTS_LIST",data:a,count:a.length,_meta_actions:[]}}],[/\/getTrialBalance\(\)/,async t=>{const e=await openkbs.items({action:"fetchItems",limit:1e3});const n=e.items?.filter((t=>t.meta?.itemType==="document"))||[];if(n.length===0){return{type:"TRIAL_BALANCE",message:"No documents found for trial balance",data:{categories:{},totals:{debit:0,credit:0}},_meta_actions:[]}}const a=await getOrCreateChartOfAccounts();const o={};const buildAccountMap=(t,e=null)=>{t.forEach((t=>{o[t.number]={name:t.name,category:t.category||e,debit:0,credit:0,balance:0,transactions:[]};if(t.subAccounts&&t.subAccounts.length>0){buildAccountMap(t.subAccounts,t.category)}}))};buildAccountMap(a.accounts);for(const t of n){const e=await openkbs.decrypt(t.item.document);const n=JSON.parse(e);if(n.Accountings){for(const t of n.Accountings){if(t.AccountingDetails){for(const e of t.AccountingDetails){const t=e.AccountNumber;if(o[t]){const a=parseFloat(e.Amount||0);if(e.Direction==="Debit"){o[t].debit+=a}else if(e.Direction==="Credit"){o[t].credit+=a}o[t].transactions.push({documentId:n.DocumentId,date:n.Date,description:e.Description,direction:e.Direction,amount:a})}}}}}}const c={};let s=0;let r=0;Object.entries(o).forEach((([t,e])=>{if(e.debit>0||e.credit>0){const n=e.category||"Other";if(n==="Assets"||n==="Expenses"){e.balance=e.debit-e.credit}else{e.balance=e.credit-e.debit}if(!c[n]){c[n]={accounts:[],totalDebit:0,totalCredit:0,totalBalance:0}}c[n].accounts.push({number:t,name:e.name,debit:e.debit,credit:e.credit,balance:e.balance,transactionCount:e.transactions.length});c[n].totalDebit+=e.debit;c[n].totalCredit+=e.credit;c[n].totalBalance+=e.balance;s+=e.debit;r+=e.credit}}));Object.values(c).forEach((t=>{t.accounts.sort(((t,e)=>t.number.localeCompare(e.number)))}));return{type:"TRIAL_BALANCE",data:{categories:c,totals:{debit:s,credit:r,difference:Math.abs(s-r)},documentCount:n.length,generatedAt:(new Date).toLocaleString()},_meta_actions:[]}}],[/\/getIncomeStatement\(\)/,async t=>{const e=await openkbs.items({action:"fetchItems",limit:1e3});const n=e.items?.filter((t=>t.meta?.itemType==="document"))||[];if(n.length===0){return{type:"INCOME_STATEMENT",message:"No documents found",data:{revenue:{accounts:[],total:0},expenses:{accounts:[],total:0},netIncome:0},_meta_actions:[]}}const a=await getOrCreateChartOfAccounts();const o={};const buildAccountMap=(t,e=null)=>{t.forEach((t=>{o[t.number]={name:t.name,category:t.category||e,amount:0,transactions:0};if(t.subAccounts&&t.subAccounts.length>0){buildAccountMap(t.subAccounts,t.category)}}))};buildAccountMap(a.accounts);for(const t of n){const e=await openkbs.decrypt(t.item.document);const n=JSON.parse(e);if(n.Accountings){for(const t of n.Accountings){if(t.AccountingDetails){for(const e of t.AccountingDetails){const t=e.AccountNumber;if(o[t]){const n=parseFloat(e.Amount||0);const a=o[t].category;if(a==="Revenue"){if(e.Direction==="Credit"){o[t].amount+=n}else{o[t].amount-=n}}else if(a==="Expenses"){if(e.Direction==="Debit"){o[t].amount+=n}else{o[t].amount-=n}}o[t].transactions++}}}}}}const c={accounts:[],total:0};const s={accounts:[],total:0};Object.entries(o).forEach((([t,e])=>{if(e.amount!==0){if(e.category==="Revenue"){c.accounts.push({number:t,name:e.name,amount:e.amount,transactions:e.transactions});c.total+=e.amount}else if(e.category==="Expenses"){s.accounts.push({number:t,name:e.name,amount:e.amount,transactions:e.transactions});s.total+=e.amount}}}));c.accounts.sort(((t,e)=>e.amount-t.amount));s.accounts.sort(((t,e)=>e.amount-t.amount));const r=c.total-s.total;return{type:"INCOME_STATEMENT",data:{revenue:c,expenses:s,netIncome:r,profitMargin:c.total>0?r/c.total*100:0,documentCount:n.length,generatedAt:(new Date).toLocaleString()},_meta_actions:[]}}],[/\/getVATReport\(\)/,async t=>{const e=await openkbs.items({action:"fetchItems",limit:1e3});const n=e.items?.filter((t=>t.meta?.itemType==="document"))||[];if(n.length===0){return{type:"VAT_REPORT",message:"No documents found",data:{inputVAT:0,outputVAT:0,vatPayable:0,documents:[]},_meta_actions:[]}}let a=0;let o=0;const c=[];for(const t of n){const e=await openkbs.decrypt(t.item.document);const n=JSON.parse(e);const s=parseFloat(n.TotalVatAmount||0);if(s>0){let t=false;let e=false;if(n.Accountings){for(const a of n.Accountings){if(a.AccountingDetails){for(const n of a.AccountingDetails){if(n.AccountNumber==="2310"){t=true}else if(n.AccountNumber==="2320"){e=true}}}}}c.push({documentId:n.DocumentId,number:n.Number,date:n.Date,sender:n.CompanySender?.Name,recipient:n.CompanyRecipient?.Name,totalAmount:parseFloat(n.TotalAmount||0),vatAmount:s,type:t?"Input VAT":e?"Output VAT":"Unknown"});if(t){a+=s}else if(e){o+=s}}}c.sort(((t,e)=>new Date(e.date)-new Date(t.date)));const s=o-a;return{type:"VAT_REPORT",data:{inputVAT:a,outputVAT:o,vatPayable:s,vatRefundable:s<0?Math.abs(s):0,documents:c,summary:{totalDocuments:c.length,inputDocuments:c.filter((t=>t.type==="Input VAT")).length,outputDocuments:c.filter((t=>t.type==="Output VAT")).length},generatedAt:(new Date).toLocaleString()},_meta_actions:[]}}],[/\/getAccountsReport\(\)/,async t=>{const e=await openkbs.items({action:"fetchItems",limit:1e3});const n=e.items?.filter((t=>t.meta?.itemType==="document"))||[];if(n.length===0){return{type:"ACCOUNTS_REPORT",message:"No documents found",data:{payables:[],receivables:[],totalPayable:0,totalReceivable:0},_meta_actions:[]}}const a={};const o={};for(const t of n){const e=await openkbs.decrypt(t.item.document);const n=JSON.parse(e);let c=false;let s=false;if(n.Accountings){for(const t of n.Accountings){if(t.AccountingDetails){for(const e of t.AccountingDetails){if(e.AccountNumber==="2100"){c=true}else if(e.AccountNumber==="1200"){s=true}}}}}const r=parseFloat(n.TotalAmount||0);const u=Math.floor((new Date-new Date(n.Date))/(1e3*60*60*24));if(c){const t=n.CompanySender?.Name||"Unknown";if(!a[t]){a[t]={name:t,taxId:n.CompanySender?.TaxID,totalAmount:0,documents:[]}}a[t].totalAmount+=r;a[t].documents.push({documentId:n.DocumentId,number:n.Number,date:n.Date,amount:r,daysOld:u,aging:u<=30?"Current":u<=60?"31-60 days":u<=90?"61-90 days":"Over 90 days"})}if(s){const t=n.CompanyRecipient?.Name||"Unknown";if(!o[t]){o[t]={name:t,taxId:n.CompanyRecipient?.TaxID,totalAmount:0,documents:[]}}o[t].totalAmount+=r;o[t].documents.push({documentId:n.DocumentId,number:n.Number,date:n.Date,amount:r,daysOld:u,aging:u<=30?"Current":u<=60?"31-60 days":u<=90?"61-90 days":"Over 90 days"})}}const c=Object.values(a);const s=Object.values(o);const r=c.reduce(((t,e)=>t+e.totalAmount),0);const u=s.reduce(((t,e)=>t+e.totalAmount),0);const calculateAging=t=>{const e={current:0,days30_60:0,days60_90:0,over90:0};t.forEach((t=>{t.documents.forEach((t=>{if(t.aging==="Current")e.current+=t.amount;else if(t.aging==="31-60 days")e.days30_60+=t.amount;else if(t.aging==="61-90 days")e.days60_90+=t.amount;else e.over90+=t.amount}))}));return e};return{type:"ACCOUNTS_REPORT",data:{payables:c,receivables:s,totalPayable:r,totalReceivable:u,netPosition:u-r,agingSummary:{payables:calculateAging(c),receivables:calculateAging(s)},generatedAt:(new Date).toLocaleString()},_meta_actions:[]}}],[/\[[\s\S]*?"image_url"[\s\S]*?\]/,async e=>{const n=JSON.parse(e[0]);const a=[];for(const t of n){if(t.type==="image_url"&&t.image_url?.url){a.push(t.image_url.url)}}if(a.length===0){throw new Error("No image URLs found in upload")}const o=[];for(const t of a){const e=await openkbs.imageToText(t);o.push({imageUrl:t,text:e?.results||""})}return{data:{invoiceTexts:o,imageUrls:a},message:`OCR completed for ${a.length} image(s)`,...t}}]];const handler=async t=>{const e=getActions({_meta_actions:["REQUEST_CHAT_MODEL"]});for(let[n,a]of e){const e=t.payload.messages[t.payload.messages.length-1].content;const o=e?.match(n);if(o)return await a(o)}return{type:"CONTINUE"}};module.exports=e})();